.TH "sscma::repl::Server" 3 "Sun Sep 17 2023" "Version v2023.09.15" "SSCMA-Micro CPP SDK" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sscma::repl::Server
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <server\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBServer\fP ()"
.br
.ti -1c
.RI "\fB~Server\fP ()"
.br
.ti -1c
.RI "\fBServer\fP (\fBServer\fP const &)=delete"
.br
.ti -1c
.RI "\fBServer\fP & \fBoperator=\fP (\fBServer\fP const &)=delete"
.br
.ti -1c
.RI "void \fBinit\fP (\fBrepl_echo_cb_t\fP echo_cb)"
.br
.ti -1c
.RI "void \fBdeinit\fP ()"
.br
.ti -1c
.RI "bool \fBhas_cmd\fP (const std::string &cmd)"
.br
.ti -1c
.RI "\fBel_err_code_t\fP \fBregister_cmd\fP (const \fBrepl_cmd_t\fP &cmd)"
.br
.ti -1c
.RI "\fBel_err_code_t\fP \fBregister_cmd\fP (const char *cmd, const char *desc, const char *arg, \fBrepl_cmd_cb_t\fP cmd_cb)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> void \fBunregister_cmd\fP (Args &&\&.\&.\&. args)"
.br
.ti -1c
.RI "std::forward_list< \fBrepl_cmd_t\fP > \fBget_registered_cmds\fP () const"
.br
.ti -1c
.RI "void \fBprint_help\fP ()"
.br
.ti -1c
.RI "\fBel_err_code_t\fP \fBexec_non_lock\fP (std::string line)"
.br
.ti -1c
.RI "\fBel_err_code_t\fP \fBexec\fP (std::string line)"
.br
.ti -1c
.RI "void \fBloop\fP (const std::string &line)"
.br
.ti -1c
.RI "void \fBloop\fP (char c)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBm_unregister_cmd\fP (const std::string &cmd)"
.br
.ti -1c
.RI "\fBel_err_code_t\fP \fBm_exec_cmd\fP (const std::string &cmd)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> void \fBm_echo_cb\fP (\fBel_err_code_t\fP ret, Args &&\&.\&.\&. args)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "sscma::repl::Server::Server ()\fC [inline]\fP"

.SS "sscma::repl::Server::~Server ()\fC [inline]\fP"

.SS "sscma::repl::Server::Server (\fBServer\fP const &)\fC [delete]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void sscma::repl::Server::deinit ()\fC [inline]\fP"

.SS "\fBel_err_code_t\fP sscma::repl::Server::exec (std::string line)\fC [inline]\fP"

.SS "\fBel_err_code_t\fP sscma::repl::Server::exec_non_lock (std::string line)\fC [inline]\fP"

.SS "std::forward_list<\fBrepl_cmd_t\fP> sscma::repl::Server::get_registered_cmds () const\fC [inline]\fP"

.SS "bool sscma::repl::Server::has_cmd (const std::string & cmd)\fC [inline]\fP"

.SS "void sscma::repl::Server::init (\fBrepl_echo_cb_t\fP echo_cb)\fC [inline]\fP"

.SS "void sscma::repl::Server::loop (char c)\fC [inline]\fP"

.SS "void sscma::repl::Server::loop (const std::string & line)\fC [inline]\fP"

.SS "template<typename\&.\&.\&. Args> void sscma::repl::Server::m_echo_cb (\fBel_err_code_t\fP ret, Args &&\&.\&.\&. args)\fC [inline]\fP, \fC [protected]\fP"

.SS "\fBel_err_code_t\fP sscma::repl::Server::m_exec_cmd (const std::string & cmd)\fC [inline]\fP, \fC [protected]\fP"

.SS "void sscma::repl::Server::m_unregister_cmd (const std::string & cmd)\fC [inline]\fP, \fC [protected]\fP"

.SS "\fBServer\fP& sscma::repl::Server::operator= (\fBServer\fP const &)\fC [delete]\fP"

.SS "void sscma::repl::Server::print_help ()\fC [inline]\fP"

.SS "\fBel_err_code_t\fP sscma::repl::Server::register_cmd (const char * cmd, const char * desc, const char * arg, \fBrepl_cmd_cb_t\fP cmd_cb)\fC [inline]\fP"

.SS "\fBel_err_code_t\fP sscma::repl::Server::register_cmd (const \fBrepl_cmd_t\fP & cmd)\fC [inline]\fP"

.SS "template<typename\&.\&.\&. Args> void sscma::repl::Server::unregister_cmd (Args &&\&.\&.\&. args)\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for SSCMA-Micro CPP SDK from the source code\&.
